!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e||self).tinykeys={})}(this,function(e){var t=["Shift","Meta","Alt","Control"],n="object"==typeof navigator&&/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"Meta":"Control";function o(e,t){return"function"==typeof e.getModifierState&&e.getModifierState(t)}function i(e,i){var r;void 0===i&&(i={});var a=null!=(r=i.timeout)?r:1e3,f=Object.keys(e).map(function(t){return[(o=t,o.trim().split(" ").map(function(e){var t=e.split(/\b\+/),o=t.pop();return[t=t.map(function(e){return"$mod"===e?n:e}),o]})),e[t]];var o}),u=new Map,d=null;return function(e){e instanceof KeyboardEvent&&(f.forEach(function(n){var i=n[0],r=n[1],a=u.get(i)||i;!function(e,n){return!(n[1].toUpperCase()!==e.key.toUpperCase()&&n[1]!==e.code||n[0].find(function(t){return!o(e,t)})||t.find(function(t){return!n[0].includes(t)&&n[1]!==t&&o(e,t)}))}(e,a[0])?o(e,e.key)||u.delete(i):a.length>1?u.set(i,a.slice(1)):(u.delete(i),r(e))}),d&&clearTimeout(d),d=setTimeout(u.clear.bind(u),a))}}e.createKeybindingsHandler=i,e.default=function(e,t,n){var o;void 0===n&&(n={});var r=null!=(o=n.event)?o:"keydown",a=i(t,n);return e.addEventListener(r,a),function(){e.removeEventListener(r,a)}}});
//# sourceMappingURL=tinykeys.umd.js.map
